{"name":"Sublime Text Plugin: StataEditor","tagline":"Sublime Text and Stata Integration","body":"# Sublime Text and Stata Integration\r\n\r\nStataEditor is a Sublime Text 3 plugin that integrates closely with Stata. It allows you to use Sublime Text's main features (syntax highlighting, autocompletion, snippets, build systems, goto symbols, etc.) interactively with Stata, so you can fully use the advantages Sublime's workflow in Stata.\r\n\r\n\r\n![Example](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/ExampleLarge.png?raw=True)\r\n\r\n\r\n\r\n## Installation\r\n\r\n\r\n### Requirements\r\n\r\n- [Stata 13](http://www.stata.com/) (should work up to Stata 11)\r\n- [Sublime Text 3](http://www.sublimetext.com/3)\r\n- Windows (it should be straightforward to add this for OSX using [Andrew Heiss's](@andrewheiss) work; not sure about Linux)\r\n\r\n### Installation\r\n\r\n- Install [Package Control](https://sublime.wbond.net/installation) if not installed\r\n- Install the Pywin32 package. Note: to install a package, go to the Command Palette in Sublime Text (ctrl+shift+p), type \"install\", type the package name, and select it.\r\n- Add this repository: ctrl+shift+p, type \"add repo\", and enter https://github.com/sergiocorreia/StataEditor\r\n- Install the StataEditor package.\r\n- *(Optional)* Set the Stata Path: ctrl+shift+p, type \"stata path\" (or use the Tools - Stata menu) and enter the path as seen in the image at the end. If this step is skipped, StataEditor will just try to find it, and ask if it fails.\r\n- *(Optional)* Register the *Stata Automation type library*: ctrl+shift+p, \"stata register\", and accept the Windows Prompt. In case of an error, see the [manual instructions](http://www.stata.com/automation/#createmsapp). If this step is skipped, StataEditor will try to run it when required.\r\n\r\n![Stata Path](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/set-path.png?raw=True)\r\n\r\n\r\n## Using Stata\r\n\r\n\r\n### Quick Overview\r\n\r\n- Create a new file, and save it with a .do extension. This will activate the Stata syntax highlighting.\r\n- To run the do-file in Stata, press ctrl+b or go to Tools - Build\r\n- To use snippets, press Tab or Enter when it starts autocompleting. To see all snippets, type \"snip:\" in the Command Palette (ctrl+shift+p)\r\n- To set up autocompletion, type \"auto\" and then Tab. Then fill the dtapaths line with e.g. \"C:/MyData/\"\r\n- To insert a dataset name, press ctrl+space when in the correct line (e.g. in a use/merge/append/etc)\r\n- To insert a variable name, press ctrl+shift+space\r\n- To insert a header, type \"head\" and then tab. You can quickly jump to a header or program with the ctrl+r key (\"goto symbol\")\r\n\r\n\r\n### Syntax Highlighting\r\n\r\nTo use the Stata package and syntax highlighting, you can either i) save the file as a Stata type (.do .ado .mata), ii) click on the lower right corner, or iii) type \"syntax: stata\" in the Command Palette\r\n\r\n![Syntax Highlighting](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/SyntaxSmall.png?raw=True)\r\n\r\n\r\n### Executing Code\r\n\r\nTo do or run the file, press ctrl+b (do) or ctrl+shift+b (run), or go to the Build menu. Note that *building* a file is the Sublime Text equivalent of *do* and *run* in Stata.\r\n\r\n![Build Menu](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/Build.png?raw=True)\r\n\r\n\r\n### Snippets\r\n\r\nTo use a snippet, just start writing it and then press Tab:\r\n\r\n![Snippet Example](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/snippet-example.png?raw=True)\r\n\r\nTo see all available snippets, press \"snip\" in the Command Palette or go to Tools - Snippets.\r\n\r\n![Snippet Palette](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/snippet-palette.png?raw=True)\r\n\r\nSnippets are \"intelligent\" and allow to be completed in order, indicating variables, options, etc. Within a snippet, press Tab to go to the next value:\r\n\r\n![Snippet Animation](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/snippet-animation.gif?raw=True)\r\n\r\n\r\n### Go To Symbol\r\n\r\nYou can jump to different sections of the do-file with the ctrl+g shortcut. Currently, it recognizes program declarations and \"header comments\". To insert a header comment, use the \"header\" snippet (type \"head\", then Tab).\r\n\r\n![Goto](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/Goto.png?raw=True)\r\n\r\nTechnical note: a header comment is just a line that starts with \"// \" (nothing before the slashes, and a space after them).\r\n\r\n\r\n### Help\r\n\r\nPressing the F1 key will search for the help file of any selected word and try to open it in Sublime Text. Pressing shift+F1 will do the same but opening it in the Stata Viewer.\r\n\r\n### Autocompletion\r\n\r\n\r\n#### Using the Autocomplete Snippet\r\n\r\n- Save the file if it is still untitled.\r\n- Use the \"autocomplete\" snippet (\"auto\", Tab) to insert the required comments.\r\n\r\n![Autocomplete Snippet](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/autocomplete-1.png?raw=True)\r\n\r\n![Autocomplete Snippet](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/autocomplete-2.png?raw=True)\r\n\r\n- Change the dtapaths line. Just type one or more folders followed by commas.\r\n\r\n![Autocomplete Snippet](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/autocomplete-3.png?raw=True)\r\n\r\nThe dtapaths line can be customizable:\r\n- Paths can be absolute or relative to the do-file.\r\n- Multiple paths must be separated by commas.\r\n- Quotes are optional.\r\n- If the line is too long, you can use multiple lines; just start each line with \"*! dtapaths: \"\r\n- Nicknames: If in the code you have set something like *global TEST=C:/MyData/TestData*, which you then use in strings like \"$TEST/SomeDataset\" you can use a nickname to refer to a folder. For instance, *$TEST=C:/MyData/Final* instead of just *C:/MyData/Final*\r\n\r\n![Autocomplete Snippet](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/autocomplete-4.png?raw=True)\r\n\r\n\r\n#### Dataset Autocompletion\r\n\r\nJust press ctrl+space if you are in a line that has a \"use\" or \"using\" strings. If the Stata window was still closed, you may need to press it again. \r\n\r\n![Dataset Autocompletion](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/dta.png?raw=True)\r\n\r\n\r\n#### Variable Autocompletion\r\n\r\nPress ctrl+shift+space anywhere in the do file:\r\n\r\n![Variable Autocompletion - All](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/var-all.png?raw=True)\r\n\r\nSelect all the variables that you want and press Esc to exit the menu.\r\n\r\nThe first option allows you to filter by dataset:\r\n\r\n![Variable Autocompletion - Dta](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/var-dta.png?raw=True)\r\n\r\nNotice the \"(current)\" dataset. It has all the variables generated with *gen* and *egen*, as well as the ones in the dataset currently open in Stata.\r\n\r\n![Variable Autocompletion - Current](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/var-current.png?raw=True)\r\n\r\nWhen filtering by a saved dataset, the variables that sort the dataset will be shown first and a * will be next to them:\r\n\r\n![Variable Autocompletion - Filter](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/var-filter.png?raw=True)\r\n\r\n\r\n### Example: Autocompletion + Snippets = Fun\r\n\r\nSelect the *uselong* snippet\r\n\r\n![Use1](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/use-1.png?raw=True)\r\n\r\nIt will move the caret exactly where you want.\r\n\r\n![Use2](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/use-2.png?raw=True)\r\n\r\nNow press ctrl+space, and select the dataset from the list of avaiable datasets\r\n\r\n![Use3](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/use-3.png?raw=True)\r\n\r\n![Use4](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/use-4.png?raw=True)\r\n\r\nNow press Tab to move the caret to the varlist, and press ctrl+shift+space. Notice that the *using* dataset will be automatically selected!\r\n\r\n![Use5](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/use-5.png?raw=True)\r\n\r\nAdd as many variables as you want. Remember that the ones prefixed by a * are sorting the data.\r\n\r\n![Use6](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/use-6.png?raw=True)\r\n\r\n### Available Commands\r\n\r\nTo see all available commands, you can either use the menu (Tools - Stata) or the Command Palette (ctrl+shift+p, then type \"stata:\"):\r\n\r\n*Menu Bar*\r\n![Menu](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/Menu.png?raw=True)\r\n\r\n*Command Palette*\r\n![Palette](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/Palette.png?raw=True)\r\n\r\n\r\n## Known issues (taken from Mattias' Readme.md)\r\n\r\n### Orphan Stata Window After Closing\r\n\r\nThe development of this package is still in beta and may contain bugs, so use at your own risk and make sure you backup your data. When running code from ST3, a new instance of Stata is opened. If you close ST3, then that instance will also close, though it may take around five minutes before that happens. Note that Stata will not ask you whether you want to save the data but will close without warning. **Therefore, do not use an instance of Stata that has been launched from ST3 after ST3 has been closed, as you would risk loosing your unsaved work.** This is true even if you re-launch ST3 as the connection to the old instance of Stata will have been permanently broken. Please let me know if you detect any other bugs or if you have requests for additional featuers. You can contact me at mnordin [at] gmx [dot] com.\r\n\r\n\r\n### Encoding\r\n\r\nIf you write Stata code containing non-ASCII characters in ST3, you may notice that these characters have been replaced with nonsense when you open the file in Stata's native do-file editor. This is because Stata and ST3 use different encodings. To avoid this issue, you can save your file with a different encoding in ST3. To do so, open File -> Save with encoding, and choose the appropriate encoding. Which encoding is right for you I would imagine depends on your Stata distribution. For most users in Europe and the U.S. you would probably get the correct result by choosing Western (Windows 1252). If that doesn't work, try saving with other encodings.\r\n\r\n\r\n## Missing Features\r\n\r\n- OSX Support (easy/medium)\r\n- Linux Support (hard?)\r\n- Allow variable autocompletion based on what has been currently typed (medium)\r\n- Fix \"build when selecting\". Currently every build expands the selected lines by one (hard)\r\n- Display message in red when sublime closes to warn anyone using the Stata window that it will be closed (very hard)\r\n- Interact with a remote Stata session via either Remote Desktop or an SSH Terminal (very hard)\r\n\r\n## Acknowledgements\r\n\r\nThis is a fork by [Sergio Correia](@sergiocorreia) of the StataEditor project created by [Mattias Nordin](http://sites.google.com/site/econnordin/).\r\n\r\nIt is heavily influenced by several other projects:\r\n- SublimeStataEnhanced by [Andrew Heiss](@andrewheiss)\r\n- The original TextMate plugin by Timothy Beatty, currently maintained by [Dan Byler](http://bylr.net/3/2010/10/stata-bundle-for-textmate/)\r\n\r\nThanks to Adrian Adermon and Daniel Forchheimer for helpful suggestions.\r\n\r\nSuggestions, code contributions, and pull requests [are greatly appreciated](mailto:sergio.correia@gmail.com)!\r\n","google":"UA-56468515-1","note":"Don't delete this file! It's used internally to help with page regeneration."}