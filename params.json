{"name":"Stata Editor","tagline":"Sublime Text and Stata Integration","body":"# Sublime Text and Stata Integration\r\n\r\nStataEditor is a Sublime Text 3 plugin that integrates closely with Stata. It allows you to use Sublime Text's main features (syntax highlighting, autocompletion, snippets, build systems, goto symbols, etc.) interactively with Stata, so you can fully use the advantages Sublime's workflow in Stata.\r\n\r\n![Example](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/ExampleLarge.png?raw=True)\r\n\r\n## Installation\r\n\r\n### Requirements\r\n- [Stata 13](http://www.stata.com/) (should work up to Stata 11)\r\n- [Sublime Text 3](http://www.sublimetext.com/3)\r\n- Windows (it should be straightforward to add this for OSX using [Andrew Heiss's](@andrewheiss) work; not sure about Linux)\r\n\r\n### Installation\r\n- Install [Package Control](https://sublime.wbond.net/installation) if not installed\r\n- Install the Pywin32 package (to install a package: within Sublime Text, press ctrl+shift+p, type \"install\", type the package name, and select it).\r\n- Add repository: ctrl+shift+p, type \"add repo\", and enter https://github.com/sergiocorreia/StataEditor\r\n- Install the StataEditor package.\r\n- Optional: Set the Stata Path: ctrl+shift+p, type \"stata path\" (or use the Tools - Stata menu). If this step is skipped, StataEditor will just try to find it, and ask if it fails.\r\n- Optional: Register the *Stata Automation type library*: ctrl+shift+p, \"stata register\", and accept the Windows Prompt. In case of an error, see the [manual instructions](http://www.stata.com/automation/#createmsapp). If this step is skipped, StataEditor will try to run it when required.\r\n\r\n## Using Stata\r\n\r\n### Example \r\n\r\nCreate a new file, and save it with a .do extension. It will recognize the Stata syntax in the lower left corner\r\n\r\n### Features\r\n\r\n![Goto Symbols](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/Goto.png?raw=True)\r\n![Syntax Highlighting](https://raw.githubusercontent.com/sergiocorreia/StataEditor/gh-pages/screenshots/SyntaxSmall.png?raw=True)\r\n\r\n\r\n\r\n## Acknowledgements\r\n\r\nThis is a fork by [Sergio Correia](@sergiocorreia) of the project by [Mattias Nordin](http://sites.google.com/site/econnordin/).\r\n\r\nIn addition, several other projects have been heavily influential:\r\n\r\n- SublimeStataEnhanced by [Andrew Heiss](@andrewheiss)\r\n- The original TextMate plugin by Timothy Beatty, currently maintained by [Dan Byler](http://bylr.net/3/2010/10/stata-bundle-for-textmate/)\r\n\r\nSuggestions, code contributions, and pull requests [are greatly appreciated](mailto:sergio.correia@gmail.com)!\r\n\r\nThis \r\n\r\n, providing the most common Sublime Text syntax highlighting, dataset and variable autocompletion, snippets, an\r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.","google":"UA-56468515-1","note":"Don't delete this file! It's used internally to help with page regeneration."}